#!/bin/sh -e
#
# test for hook that creates dpkg.yaml used for OSS compliance

#first check if file exists
FILE=usr/share/snappy/dpkg.yaml
test -e $FILE

#second check the PPA section of dpkg.yaml
ppa_section=$(cat <<EOF
package-repositories:
- type: apt
  ppa: canonical-foundations/ubuntu/ubuntu-image
EOF
)

if grep -Fxq "$ppa_section" $FILE
then
  echo "Content of PPA section is as expected in dpkg.yaml."
else 
  echo "Error! PPA section of dpkg.yaml not as expected."
  echo "If that is intentional, please update the ppa_section content in the"
  echo "test file: core18/hook-tests/600-no-debian.test."
  exit 1
fi

#third check the Packages section of dpkg.yaml
pkgs_start=$(( $(awk '/packages:/{ print NR; exit }' $FILE) +1))
in_yaml_file_pkgs=$(cat <<EOF> in_yaml_file_pkgs.txt
$(tail -n +$pkgs_start $FILE | awk -F= '{print $1}' | awk -F "- " '{print $NF }')
EOF
)

expected_pkgs=$(cat <<EOF> expected_pkgs.txt
adduser
apparmor
apt
base-files
base-passwd
bash
bash-completion
bsdutils
bzip2
ca-certificates
cloud-guest-utils
cloud-init
console-conf
coreutils
dash
dbus
debconf
debianutils
diffutils
dirmngr
distro-info-data
dmsetup
dosfstools
dpkg
e2fsprogs
fdisk
finalrd
findutils
gcc-8-base:amd64
gcc-8-base:i386
gdbserver
gpg-agent
gpgv
grep
gzip
hostname
init-system-helpers
iproute2
iptables
iputils-ping
isc-dhcp-client
kmod
less
libacl1:amd64
libapparmor1:amd64
libapt-pkg5.0:amd64
libargon2-0:amd64
libattr1:amd64
libaudit-common
libaudit1:amd64
libblkid1:amd64
libbsd0:amd64
libbz2-1.0:amd64
libc-bin
libc6:amd64
libc6:i386
libcap-ng0:amd64
libcap2:amd64
libcom-err2:amd64
libcryptsetup12:amd64
libdb5.3:amd64
libdbus-1-3:amd64
libdebconfclient0:amd64
libdevmapper1.02.1:amd64
libdns-export1100
libedit2:amd64
libelf1:amd64
libexpat1:amd64
libext2fs2:amd64
libfdisk1:amd64
libffi6:amd64
libgcc1:amd64
libgcc1:i386
libgcrypt20:amd64
libglib2.0-0:amd64
libgmp10:amd64
libgnutls30:amd64
libgpg-error0:amd64
libgssapi-krb5-2:amd64
libhogweed4:amd64
libidn11:amd64
libidn2-0:amd64
libip4tc0:amd64
libip6tc0:amd64
libiptc0:amd64
libisc-export169:amd64
libjson-c3:amd64
libk5crypto3:amd64
libkeyutils1:amd64
libkmod2:amd64
libkrb5-3:amd64
libkrb5support0:amd64
libldap-common
liblz4-1:amd64
liblzma5:amd64
liblzo2-2:amd64
libmnl0:amd64
libmount1:amd64
libmpdec2:amd64
libncurses5:amd64
libncursesw5:amd64
libnetfilter-conntrack3:amd64
libnetplan0:amd64
libnettle6:amd64
libnfnetlink0:amd64
libnl-3-200:amd64
libnl-genl-3-200:amd64
libnl-route-3-200:amd64
libnss-extrausers
libp11-kit0:amd64
libpam-modules:amd64
libpam-modules-bin
libpam-runtime
libpam-systemd:amd64
libpam0g:amd64
libpcre3:amd64
libpcsclite1:amd64
libprocps6:amd64
libpython3-stdlib:amd64
libpython3.6-minimal:amd64
libpython3.6-stdlib:amd64
libreadline7:amd64
libseccomp2:amd64
libselinux1:amd64
libsemanage-common
libsemanage1:amd64
libsepol1:amd64
libsmartcols1:amd64
libsqlite3-0:amd64
libss2:amd64
libssl1.0.0:amd64
libssl1.1:amd64
libstdc++6:amd64
libsystemd0:amd64
libtasn1-6:amd64
libtinfo5:amd64
libudev1:amd64
libunistring2:amd64
libuuid1:amd64
libwrap0:amd64
libxtables12:amd64
libyaml-0-2:amd64
libzstd1:amd64
login
lsb-base
mawk
mime-support
mount
multiarch-support
ncurses-base
ncurses-bin
netcat-openbsd
netplan.io
openssh-client
openssh-server
openssh-sftp-server
openssl
passwd
perl-base
probert
procps
python3
python3-all
python3-asn1crypto
python3-blinker
python3-certifi
python3-cffi-backend
python3-chardet
python3-configobj
python3-cryptography
python3-distutils
python3-idna
python3-jinja2
python3-json-pointer
python3-jsonpatch
python3-jsonschema
python3-jwt
python3-lib2to3
python3-markupsafe
python3-minimal
python3-netifaces
python3-oauthlib
python3-pkg-resources
python3-pyudev
python3-requests
python3-requests-unixsocket
python3-serial
python3-six
python3-urllib3
python3-urwid
python3-yaml
python3.6
python3.6-minimal
readline-common
rfkill
sed
sensible-utils
squashfs-tools
subiquitycore
sudo
systemd
systemd-sysv
sysvinit-utils
tar
tzdata
ubuntu-keyring
ucf
udev
util-linux
vim-common
vim-tiny
wpasupplicant
xx
zlib1g:amd64
EOF
)

sort in_yaml_file_pkgs.txt
sort expected_pkgs.txt

DIFF=$(comm in_yaml_file_pkgs.txt expected_pkgs.txt)

if [ -n "$DIFF" ]; then
  echo "Content of Packages section in dpkg.yaml file is as expected."
else 
  echo "Error! Packages section of dpkg.yaml not as expected."
  echo $DIFF
  echo "If that is intentional, please update the packages_section "
  echo "content in the "
  echo "test file: core18/hook-tests/600-no-debian.test."
  exit 1
fi

# cleanup temp files used for comparisons 
rm -f expected_pkgs.txt
rm -f in_yaml_file_pkgs.txt
